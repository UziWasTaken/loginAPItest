---
// Empty frontmatter is fine, but we need to keep it
---

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>API Documentation</title>
	<style>
		body {
			font-family: system-ui, -apple-system, sans-serif;
			line-height: 1.6;
			max-width: 800px;
			margin: 0 auto;
			padding: 2rem;
		}
		.endpoint {
			background: #f4f4f4;
			padding: 1rem;
			border-radius: 4px;
			margin: 1rem 0;
		}
		.method {
			background: #4CAF50;
			color: white;
			padding: 0.2rem 0.5rem;
			border-radius: 3px;
			font-size: 0.9rem;
		}
		pre {
			background: #2d2d2d;
			color: #fff;
			padding: 1rem;
			border-radius: 4px;
			overflow-x: auto;
		}
		button {
			background: #4CAF50;
			color: white;
			border: none;
			padding: 0.5rem 1rem;
			border-radius: 4px;
			cursor: pointer;
		}
		button:hover {
			background: #45a049;
		}
	</style>
</head>
<body>
	<h1>API Documentation</h1>
	
	<h2>Test Endpoint</h2>
	<div class="endpoint">
		<p><span class="method">GET</span> /api/test</p>
		<p>A simple test endpoint that returns a greeting message.</p>
		
		<h3>Response</h3>
		<pre>{
    "message": "Hello from the API!",
    "timestamp": "2024-03-21T12:00:00Z"
}</pre>
		
		<h3>Try it out</h3>
		<button onclick="testAPI()">Test Endpoint</button>
		<pre id="response">// Response will appear here</pre>
	</div>

	<script>
		async function testAPI() {
			const response = document.getElementById('response');
			try {
				const res = await fetch('/api/test');
				const data = await res.json();
				response.textContent = JSON.stringify(data, null, 2);
			} catch (error) {
				response.textContent = `Error: ${error.message}`;
			}
		}
	</script>
</body>
</html>
